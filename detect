stages:
  - detect
  - build
  - build_and_push

variables:
  IMAGE_NAME: "$CI_PROJECT_NAME"
  IMAGE_TAG: "$CI_COMMIT_SHORT_SHA"
  NEXUS_REPO_USER: "svc-apim-cicd-dev"
  NEXUS_REPO_PASS: "F_arX1Z%fIQSfZEM@aJL9RRk*"
  NEXUS_REGISTRY: "fmk.nexus-ci.onefiserv.net"
  NEXUS_REPO_PATH: "apm/0006528"
  FMK_PROD: "fmk.nexus.onefiserv.net"
  FMK_OPENJDK_IMAGE: "$FMK_PROD/fmk/java/openjdk-17-maven:FMK-12-01-23"
  FULL_IMAGE_NAME: "$NEXUS_REGISTRY/$NEXUS_REPO_PATH/$IMAGE_NAME:$IMAGE_TAG"
  MAVEN_CLI_OPTS: "-s $CI_PROJECT_DIR/.m2/cicd-settings.xml --batch-mode"
  JAR_NAME: "$CI_PROJECT_NAME-0.0.1-SNAPSHOT.jar"

default:
  tags:
    - apihub-shell-prod

detect_project_type:
  stage: detect
  image: bash:latest
  script:
    - echo "Detecting project type..."
    - |
      if [ -f "pom.xml" ]; then
        echo "JAVA_MAVEN" > project_type.txt
      elif [ -f "package.json" ] && grep -q react package.json; then
        echo "REACT" > project_type.txt
      elif [ -f "package.json" ]; then
        echo "NODE" > project_type.txt
      elif [ -f "requirements.txt" ]; then
        echo "PYTHON" > project_type.txt
      else
        echo "UNKNOWN" > project_type.txt
      fi
  artifacts:
    paths:
      - project_type.txt

package:
  stage: build
  image: docker:latest
  services:
    - docker:dind
  dependencies:
    - detect_project_type
  script:
    - |
      PROJECT_TYPE=$(cat project_type.txt)
      echo "Detected project type: $PROJECT_TYPE"
      if [ "$PROJECT_TYPE" = "JAVA_MAVEN" ]; then
        echo "Running Maven build..."
        docker run --rm -v $PWD:/app -w /app $FMK_OPENJDK_IMAGE mvn $MAVEN_CLI_OPTS clean install -DskipTests
      elif [ "$PROJECT_TYPE" = "REACT" ]; then
        echo "Installing and building React app..."
        docker run --rm -v $PWD:/app -w /app node:18 bash -c "npm install && npm run build"
      elif [ "$PROJECT_TYPE" = "NODE" ]; then
        echo "Installing Node.js dependencies..."
        docker run --rm -v $PWD:/app -w /app node:18 npm install
      elif [ "$PROJECT_TYPE" = "PYTHON" ]; then
        echo "Installing Python dependencies..."
        docker run --rm -v $PWD:/app -w /app python:3.10 pip install -r requirements.txt
      else
        echo "Unknown project type. Skipping build."
      fi
  artifacts:
    paths:
      - project_type.txt
      - target/$JAR_NAME

build_and_push_image:
  stage: build_and_push
  image: docker:latest
  services:
    - docker:dind
  dependencies:
    - package
  script:
    - echo "Logging in to Nexus Docker registry..."
    - echo "$NEXUS_REPO_PASS" | docker login -u "$NEXUS_REPO_USER" --password-stdin "$NEXUS_REGISTRY"
    - echo "Building Docker image..."
    - docker build -t "$FULL_IMAGE_NAME" .
    - echo "Pushing Docker image to Nexus..."
    - docker push "$FULL_IMAGE_NAME"
  rules:
    - changes:
        - "**/*"
